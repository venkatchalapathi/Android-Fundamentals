/Users/venkat/Venkat2.0/AndroidCocepts/Android-Fundamentals/kotlin-programming/src/main/AndroidManifest.xml:14: Warning: Redundant label can be removed [RedundantLabel]
            android:label="@string/app_name"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "RedundantLabel":
   When an activity does not have a label attribute, it will use the one from
   the application tag. Since the application has already specified the same
   label, the label on this activity can be omitted.

/Users/venkat/Venkat2.0/AndroidCocepts/Android-Fundamentals/kotlin-programming/build.gradle.kts:60: Warning: A newer version of androidx.lifecycle:lifecycle-runtime-ktx than 2.6.2 is available: 2.9.4 [GradleDependency]
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.6.2")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/venkat/Venkat2.0/AndroidCocepts/Android-Fundamentals/kotlin-programming/build.gradle.kts:61: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-ktx than 2.6.2 is available: 2.9.4 [GradleDependency]
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/venkat/Venkat2.0/AndroidCocepts/Android-Fundamentals/kotlin-programming/build.gradle.kts:62: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-compose than 2.6.2 is available: 2.9.4 [GradleDependency]
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/Users/venkat/Venkat2.0/AndroidCocepts/Android-Fundamentals/kotlin-programming/build.gradle.kts:63: Warning: A newer version of org.jetbrains.kotlinx:kotlinx-coroutines-core than 1.8.0 is available: 1.10.2 [NewerVersionAvailable]
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "NewerVersionAvailable":
   This detector checks with a central repository to see if there are newer
   versions available for the dependencies used by this project. This is
   similar to the GradleDependency check, which checks for newer versions
   available in the Android SDK tools and libraries, but this works with any
   MavenCentral dependency, and connects to the library every time, which
   makes it more flexible but also much slower.

/Users/venkat/Venkat2.0/AndroidCocepts/Android-Fundamentals/kotlin-programming/src/main/res/values/colors.xml:3: Warning: The resource R.color.black appears to be unused [UnusedResources]
    <color name="black">#FF000000</color>
           ~~~~~~~~~~~~
/Users/venkat/Venkat2.0/AndroidCocepts/Android-Fundamentals/kotlin-programming/src/main/res/values/colors.xml:4: Warning: The resource R.color.white appears to be unused [UnusedResources]
    <color name="white">#FFFFFFFF</color>
           ~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

   Available options:

   **skip-libraries** (default is true):
   Whether the unused resource check should skip reporting unused resources in libraries.

   Many libraries will declare resources that are part of the library surface; other modules depending on the library will also reference the resources. To avoid reporting all these resources as unused (in the context of a library), the unused resource check normally skips reporting unused resources in libraries. Instead, run the unused resource check on the consuming app module (along with `checkDependencies=true`).

   However, there are cases where you want to check that all the resources declared in a library are used; in that case, you can disable the skip option.

   To configure this option, use a `lint.xml` file with an <option> like this:

   ```xml
   <lint>
       <issue id="UnusedResources">
           <option name="skip-libraries" value="true" />
       </issue>
   </lint>
   ```

/Users/venkat/Venkat2.0/AndroidCocepts/Android-Fundamentals/kotlin-programming/build.gradle.kts:60: Warning: Use version catalog instead (androidx.lifecycle:lifecycle-runtime-ktx is already available as androidx-lifecycle-runtime-ktx, but using version 2.9.1 instead) [UseTomlInstead]
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.6.2")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/venkat/Venkat2.0/AndroidCocepts/Android-Fundamentals/kotlin-programming/build.gradle.kts:61: Warning: Use version catalog instead [UseTomlInstead]
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/venkat/Venkat2.0/AndroidCocepts/Android-Fundamentals/kotlin-programming/build.gradle.kts:62: Warning: Use version catalog instead [UseTomlInstead]
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/venkat/Venkat2.0/AndroidCocepts/Android-Fundamentals/kotlin-programming/build.gradle.kts:63: Warning: Use version catalog instead [UseTomlInstead]
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/venkat/Venkat2.0/AndroidCocepts/Android-Fundamentals/kotlin-programming/build.gradle.kts:64: Warning: Use version catalog instead [UseTomlInstead]
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.2")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UseTomlInstead":
   If your project is using a libs.versions.toml file, you should place all
   Gradle dependencies in the TOML file. This lint check looks for version
   declarations outside of the TOML file and suggests moving them (and in the
   IDE, provides a quickfix to performing the operation automatically).

0 errors, 12 warnings
